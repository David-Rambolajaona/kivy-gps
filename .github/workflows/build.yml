name: Build Kivy APK

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-pip build-essential git openjdk-8-jdk unzip
        pip install --upgrade pip
        pip install cython buildozer

    - name: Set up Android SDK
      env:
        ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      run: |
        mkdir -p $ANDROID_SDK_ROOT
        curl -o sdk-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-6858069_latest.zip
        unzip -d $ANDROID_SDK_ROOT sdk-tools.zip
        yes | $ANDROID_SDK_ROOT/cmdline-tools/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses
        $ANDROID_SDK_ROOT/cmdline-tools/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platform-tools" "platforms;android-29" "build-tools;29.0.3" "extras;android;m2repository" "system-images;android-29;google_apis;x86" "emulator"

    - name: Configure buildozer.spec
      run: |
        python3 -c "
import configparser
config = configparser.ConfigParser()
config.read('buildozer.spec')
config.set('app', 'android.sdk_path', '${{ github.workspace }}/android-sdk')
config.set('app', 'android.ndk_path', '${{ github.workspace }}/android-ndk')
with open('buildozer.spec', 'w') as configfile:
    config.write(configfile)
        "

    - name: Build APK
      run: buildozer -v android debug

    - name: Upload APK
      uses: actions/upload-artifact@v2
      with:
        name: app
        path: bin/*.apk
